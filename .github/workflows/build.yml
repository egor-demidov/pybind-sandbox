name: Build

run-name: Build pipeline triggered by ${{ github.actor }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  Compile-Linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build
        continue-on-error: true
        env:
          PYPI_KEY: ${{ secrets.PYPI_KEY }}
        run: |
          python3 --version
          sudo apt install pybind11-dev -y
          python3 -m venv .venv
          source .venv/bin/activate
          pip3 install build
          ./build.sh
          pip3 install twine auditwheel
          for wheel in ./package/dist/*.whl; do
          auditwheel show $wheel
          auditwheel repair $wheel
          done
          

  # Compile-Windows:
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Build
  #       continue-on-error: true
  #       env:
  #         PYPI_KEY: ${{ secrets.PYPI_KEY }}
  #       run: |
  #         python --version
  #         git clone https://github.com/pybind/pybind11.git
  #         cd pybind11
  #         cmake -B build -S .
  #         cmake --build build
  #         cmake --install build
  #         $env:Path += ";C:/Program Files (x86)/pybind11/share/cmake/pybind11/"
  #         cd ..
  #         cd package
  #         python -m venv .venv
  #         .venv\Scripts\activate
  #         pip install build
  #         python -m build
  #         pip install twine
  #         echo "[pypi]" >> ~/.pypirc
  #         echo "  username: __token__" >> ~/.pypirc
  #         echo "  password: $PYPI_KEY" >> ~/.pypirc
  #         python -m twine upload --repository pypi -u __token__ -p "${PYPI_KEY}" dist\*.whl

  # Compile-MacOS-14:
  #   runs-on: macos-14
  #   strategy:
  #     matrix:
  #       python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Build
  #       run: |
  #         brew install cmake pybind11
  #         python3 -m venv .venv
  #         source .venv/bin/activate
  #         pip3 install build
  #         ./build.sh

  # Compile-MacOS-13:
  #   runs-on: macos-13
  #   strategy:
  #     matrix:
  #       python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: recursive

  #     - name: Set up Python ${{ matrix.python-version }}
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: ${{ matrix.python-version }}

  #     - name: Build
  #       continue-on-error: true
  #       env:
  #         PYPI_KEY: ${{ secrets.PYPI_KEY }}
  #       run: |
  #         python3 --version
  #         brew install cmake pybind11
  #         python3 -m venv .venv
  #         source .venv/bin/activate
  #         pip3 install build
  #         ./build.sh
  #         pip3 install twine
  #         echo "[pypi]" >> ~/.pypirc
  #         echo "  username: __token__" >> ~/.pypirc
  #         echo "  password: $PYPI_KEY" >> ~/.pypirc
  #         python3 -m twine upload --repository pypi package/dist/*.whl

